name: Deploy webapp to Cloudflare Pages
description: Action designed to automate the deployment of web applications to Cloudflare Pages

inputs:
  CLOUDFLARE_API_TOKEN:
    description: A Cloudflare API token
    required: true
  CLOUDFLARE_ACCOUNT_ID:
    description: A Cloudflare account ID
    required: true
  PROJECT_NAME:
    description: "Cloudflare Pages project name"
    required: true
  ENV:
    description: "Environment to deploy"
    required: true
    default: production
  DRY_RUN:
    description: "Compile a project without actually deploying to live servers"
    required: false
    default: "false"
  GH_TOKEN:
    description: "A GitHub PAT"
    required: true
  GH_ACTOR:
    description: "A GitHub actor"
    required: true
  prRef:
    description: Pull request reference, e.g. `github.event.pull_request.head.ref`
    required: false
    default: main

outputs:
  deploy-url:
    description: "Deploy URL"
    value: ${{ steps.deploy.outputs.deployment-url }}

runs:
  using: composite
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Configure Git
      run: |
        git config --global user.name "${{ inputs.GH_ACTOR }}"
        git config --global user.email "${{ inputs.GH_ACTOR }}@users.noreply.github.com"
      shell: bash

    - name: GitHub Package Registry Identity
      env:
        GITHUB_TOKEN: ${{ inputs.GH_TOKEN }}
      run: |
        echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" > .npmrc
        echo "@exile-watch:registry=https://npm.pkg.github.com/" >> .npmrc
      shell: bash

    - name: Install dependencies
      run: npm ci
      shell: bash

    - name: "Move sitemap from @exile-watch/seo to crucible"
      run: mv node_modules/@exile-watch/seo/sitemap.xml public/sitemap.xml
      shell: bash

    - name: Test
      run: npm run test
      shell: bash

    - name: Build
      run: npx @cloudflare/next-on-pages
      shell: bash

#    - name: Build & Deploy Worker
#      id: deploy
#      uses: cloudflare/wrangler-action@v3
#      with:
#        apiToken: ${{ inputs.CLOUDFLARE_API_TOKEN }}
#        accountId: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
#        command: pages deploy ".vercel/output/static" --project-name=${{ inputs.PROJECT_NAME }} --env=${{ inputs.ENV }} --branch=${{ inputs.prRef }}